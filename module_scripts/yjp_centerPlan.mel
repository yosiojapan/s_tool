global proc vector[] yjp_centerPlan(string $node,int $type)
{
	print ("yjp_centerPlan\n") ;
	vector $center[];
	float $t[],$s[];
	if($type == 0){
		//yz
		$t = {0,500,0};
		$s = {0,-100,300,0,-100,-300};
	}	
	else if($type == 1){
		//xy
		$t = {500,0,0};
		$s = {-100,300,0,-100,-300,0};
	}
	else if($type == 2){
		//xz
		$t = {500,0,0};
		$s = {-100,0,300,-100,0,-300};
	}
	//ミラーの軸ノード
	
	string $fnode[] = `spaceLocator -p 0 0 0`;
	string $bnode[] = `spaceLocator -p 0 0 0`;
	string $tnode[] = `spaceLocator -p 0 0 0`;
	string $centernode[];
	
	if(!`objExists $node`){
		$centernode = `spaceLocator -p 0 0 0 -n "tempcenter"`;
		$node = $centernode[0];
	}
	
	parent $fnode[0] $bnode[0] $tnode[0] $node;
	
	//三角形の座標拡大
	setAttr ($tnode[0]+ ".t") $t[0] $t[1] $t[2];
	setAttr ($fnode[0]+ ".t") $s[0] $s[1] $s[2];
	setAttr ($bnode[0]+ ".t") $s[3] $s[4] $s[5];
	//polyCreateFacet -p $t[0] $t[1] $t[2] -p $s[0] $s[1] $s[2] -p $s[3] $s[4] $s[5];
	setAttr ($fnode[0]+ ".r") 0 0 0;
	setAttr ($bnode[0]+ ".r") 0 0 0;
	setAttr ($tnode[0]+ ".r") 0 0 0;
	
	$center[0] = `pointPosition -w $fnode[0]`;
	$center[1] = `pointPosition -w $bnode[0]`;
	$center[2] = `pointPosition -w $tnode[0]`;
	delete $fnode[0] $bnode[0] $tnode[0];
	if(`objExists "tempcenter"`)delete "tempcenter";
	
	vector $v3 = $center[1] - $center[0];
	vector $v4 = $center[2] - $center[1];
	
	$center[3] = cross($v4,$v3);
	print ("yjp_centerPlan END\n") ;
	return $center;
}
